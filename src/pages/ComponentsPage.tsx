import {
  Box,
  Typography,
  Paper,
  TextField,
  Checkbox,
  Radio,
  RadioGroup,
  FormControlLabel,
  FormControl,
  FormLabel,
  Switch,
  Slider,
  Chip,
  Avatar,
  Badge,
  IconButton,
  Fab,
  Alert,
  LinearProgress,
  CircularProgress,
  Divider,
} from '@mui/material';
import { useState } from 'react';

const ComponentsPage: React.FC = () => {
  const [textValue, setTextValue] = useState('');
  const [checked, setChecked] = useState(false);
  const [radioValue, setRadioValue] = useState('option1');
  const [switchValue, setSwitchValue] = useState(false);
  const [sliderValue, setSliderValue] = useState(30);

  return (
    <Box sx={{ p: 4 }}>
      <Typography variant="h3" gutterBottom>
        üß© MUI „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà + Material Design 3
      </Typography>
      
      <Typography variant="body1" paragraph>
        MUI„ÅÆÂêÑ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅåMaterial Design 3„ÉÜ„Éº„Éû„Åß„Å©„ÅÆ„Çà„ÅÜ„Å´Ë°®Á§∫„Åï„Çå„Çã„Åã„ÇíÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ
      </Typography>

      {/* Form Components */}
      <Paper elevation={1} sx={{ p: 4, mb: 4 }}>
        <Typography variant="h5" gutterBottom>
          „Éï„Ç©„Éº„É†„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
        </Typography>
        
        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>
          <TextField
            label="„ÉÜ„Ç≠„Çπ„Éà„Éï„Ç£„Éº„É´„Éâ"
            variant="outlined"
            value={textValue}
            onChange={(e) => setTextValue(e.target.value)}
            helperText="Material Design 3„Çπ„Çø„Ç§„É´„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„Éï„Ç£„Éº„É´„Éâ"
          />
          
          <TextField
            label="Â°ó„Çä„Å§„Å∂„Åó„Çπ„Çø„Ç§„É´"
            variant="filled"
            defaultValue="Filled variant"
          />
          
          <TextField
            label="Ê®ôÊ∫ñ„Çπ„Çø„Ç§„É´"
            variant="standard"
            defaultValue="Standard variant"
          />
          
          <Box>
            <FormControlLabel
              control={
                <Checkbox
                  checked={checked}
                  onChange={(e) => setChecked(e.target.checked)}
                />
              }
              label="„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ"
            />
          </Box>
          
          <FormControl>
            <FormLabel>„É©„Ç∏„Ç™„Éú„Çø„É≥</FormLabel>
            <RadioGroup
              value={radioValue}
              onChange={(e) => setRadioValue(e.target.value)}
              row
            >
              <FormControlLabel value="option1" control={<Radio />} label="„Ç™„Éó„Ç∑„Éß„É≥ 1" />
              <FormControlLabel value="option2" control={<Radio />} label="„Ç™„Éó„Ç∑„Éß„É≥ 2" />
              <FormControlLabel value="option3" control={<Radio />} label="„Ç™„Éó„Ç∑„Éß„É≥ 3" />
            </RadioGroup>
          </FormControl>
          
          <FormControlLabel
            control={
              <Switch
                checked={switchValue}
                onChange={(e) => setSwitchValue(e.target.checked)}
              />
            }
            label="„Çπ„Ç§„ÉÉ„ÉÅ"
          />
          
          <Box>
            <Typography gutterBottom>„Çπ„É©„Ç§„ÉÄ„Éº</Typography>
            <Slider
              value={sliderValue}
              onChange={(_, newValue) => setSliderValue(newValue as number)}
              valueLabelDisplay="auto"
              step={10}
              marks
              min={0}
              max={100}
            />
          </Box>
        </Box>
      </Paper>

      {/* Display Components */}
      <Paper elevation={1} sx={{ p: 4, mb: 4 }}>
        <Typography variant="h5" gutterBottom>
          Ë°®Á§∫„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
        </Typography>
        
        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>
          <Box>
            <Typography variant="h6" gutterBottom>„ÉÅ„ÉÉ„Éó</Typography>
            <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>
              <Chip label="„Éá„Éï„Ç©„É´„Éà" />
              <Chip label="ÂâäÈô§ÂèØËÉΩ" onDelete={() => {}} />
              <Chip label="„ÇØ„É™„ÉÉ„ÇØÂèØËÉΩ" onClick={() => {}} />
              <Chip label="„Ç¢„Éê„Çø„Éº‰ªò„Åç" avatar={<Avatar>A</Avatar>} />
              <Chip label="„Ç´„É©„Éº" color="primary" />
              <Chip label="„Çª„Ç´„É≥„ÉÄ„É™" color="secondary" />
            </Box>
          </Box>
          
          <Box>
            <Typography variant="h6" gutterBottom>„Ç¢„Éê„Çø„Éº„Å®„Éê„ÉÉ„Ç∏</Typography>
            <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>
              <Avatar>U</Avatar>
              <Avatar sx={{ bgcolor: 'secondary.main' }}>S</Avatar>
              <Badge badgeContent={4} color="primary">
                <Avatar>B</Avatar>
              </Badge>
              <Badge badgeContent={99} color="error">
                <Avatar>N</Avatar>
              </Badge>
            </Box>
          </Box>
          
          <Box>
            <Typography variant="h6" gutterBottom>„Éú„Çø„É≥È°û</Typography>
            <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>
              <IconButton color="primary">
                <span>üè†</span>
              </IconButton>
              <IconButton color="secondary">
                <span>‚≠ê</span>
              </IconButton>
              <Fab color="primary" size="small">
                <span>+</span>
              </Fab>
              <Fab color="secondary">
                <span>‚úâÔ∏è</span>
              </Fab>
            </Box>
          </Box>
        </Box>
      </Paper>

      {/* Feedback Components */}
      <Paper elevation={1} sx={{ p: 4, mb: 4 }}>
        <Typography variant="h5" gutterBottom>
          „Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
        </Typography>
        
        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>
          <Alert severity="success">ÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏„Åß„Åô</Alert>
          <Alert severity="info">ÊÉÖÂ†±„É°„ÉÉ„Çª„Éº„Ç∏„Åß„Åô</Alert>
          <Alert severity="warning">Ë≠¶Âëä„É°„ÉÉ„Çª„Éº„Ç∏„Åß„Åô</Alert>
          <Alert severity="error">„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„Åß„Åô</Alert>
          
          <Box>
            <Typography variant="h6" gutterBottom>„Éó„É≠„Ç∞„É¨„Çπ</Typography>
            <LinearProgress sx={{ mb: 2 }} />
            <LinearProgress variant="determinate" value={70} sx={{ mb: 2 }} />
            <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>
              <CircularProgress size={24} />
              <CircularProgress variant="determinate" value={75} />
            </Box>
          </Box>
        </Box>
      </Paper>

      {/* Layout Components */}
      <Paper elevation={1} sx={{ p: 4, mb: 4 }}>
        <Typography variant="h5" gutterBottom>
          „É¨„Ç§„Ç¢„Ç¶„Éà„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
        </Typography>
        
        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>
          <Box>
            <Typography variant="h6" gutterBottom>„Éá„Ç£„Éê„Ç§„ÉÄ„Éº</Typography>
            <Typography variant="body2">‰∏ä„ÅÆ„ÉÜ„Ç≠„Çπ„Éà</Typography>
            <Divider sx={{ my: 1 }} />
            <Typography variant="body2">‰∏ã„ÅÆ„ÉÜ„Ç≠„Çπ„Éà</Typography>
          </Box>
          
          <Box>
            <Typography variant="h6" gutterBottom>„Éö„Éº„Éë„ÉºÔºà„Ç®„É¨„Éô„Éº„Ç∑„Éß„É≥Ôºâ</Typography>
            <Box sx={{ display: 'flex', gap: 2 }}>
              {[0, 1, 2, 4, 8].map((elevation) => (
                <Paper
                  key={elevation}
                  elevation={elevation}
                  sx={{ p: 2, minWidth: 80, textAlign: 'center' }}
                >
                  {elevation}
                </Paper>
              ))}
            </Box>
          </Box>
        </Box>
      </Paper>
    </Box>
  );
};

export default ComponentsPage; 